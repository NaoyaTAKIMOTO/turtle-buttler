availableSecrets:
  secretManager:
    - versionName: projects/$PROJECT_ID/secrets/FIREBASE_URL/versions/latest
      env: FIREBASE_URL
    - versionName: projects/$PROJECT_ID/secrets/FIREBASE_API_KEY/versions/latest
      env: FIREBASE_API_KEY
    - versionName: projects/$PROJECT_ID/secrets/SPREADSHEET_ID/versions/latest
      env: SPREADSHEET_ID
    - versionName: projects/$PROJECT_ID/secrets/CO_API_KEY/versions/latest
      env: CO_API_KEY
    - versionName: projects/$PROJECT_ID/secrets/CHANNEL_ACCESS/versions/latest
      env: CHANNEL_ACCESS
    - versionName: projects/$PROJECT_ID/secrets/CHANNEL_SECRET/versions/latest
      env: CHANNEL_SECRET
    - versionName: projects/$PROJECT_ID/secrets/CREDENTIALS_ADMIN/versions/latest
      env: CREDENTIALS_ADMIN
    - versionName: projects/$PROJECT_ID/secrets/CREDENTIALS/versions/latest
      env: CREDENTIALS
steps:
  # Docker イメージをビルド
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/turtle-buttler:$BUILD_ID', '.']
  # Container Registry にプッシュ
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/turtle-buttler:$BUILD_ID']
  # Cloud Run にデプロイ（Secret Manager からシークレットを取得）
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    secretEnv:
      - FIREBASE_URL
      - FIREBASE_API_KEY
      - SPREADSHEET_ID
      - CO_API_KEY
      - CHANNEL_ACCESS
      - CHANNEL_SECRET
      - CREDENTIALS_ADMIN
      - CREDENTIALS
    args:
      - -c
      - |
        gcloud run deploy turtle-buttler \
          --image gcr.io/$PROJECT_ID/turtle-buttler:$BUILD_ID \
          --region asia-northeast1 \
          --platform managed \
          --allow-unauthenticated \
            --set-secrets=FIREBASE_URL=FIREBASE_URL:latest,FIREBASE_API_KEY=FIREBASE_API_KEY:latest,SPREADSHEET_ID=SPREADSHEET_ID:latest,CO_API_KEY=CO_API_KEY:latest,CHANNEL_ACCESS=CHANNEL_ACCESS:latest,CHANNEL_SECRET=CHANNEL_SECRET:latest,CREDENTIALS_ADMIN=CREDENTIALS_ADMIN:latest,CREDENTIALS=CREDENTIALS:latest
